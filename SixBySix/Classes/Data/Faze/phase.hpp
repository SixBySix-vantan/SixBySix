//
//  Phase.hpp
//  SixBySix
//
//  Created by 安田一朗太 on 2016/07/09.
//
//

#pragma once

//end()が呼ばれた際に次のフェイズに移動するようにしてね

//================================================================================================
//基底フェイズクラス
//================================================================================================
class CPhase{
public:
    //フェイズ切り替え時に呼ばれる関数
    virtual void start() = 0;
    
    //更新処理
    virtual void update() = 0;
    
    //フェイズ終了時に呼ばれる関数
    virtual void end() = 0;
};

//================================================================================================
//スタートフェイズ
//================================================================================================
class CStartPhase : public CPhase{
public:
    //フェイズ切り替え時に呼ばれる関数
    void start();
    
    //更新処理
    void update();
    
    //フェイズ終了時に呼ばれる関数
    void end();
};

//================================================================================================
//メインフェイズ
//================================================================================================
class CMainPhase : public CPhase{
public:
    //フェイズ切り替え時に呼ばれる関数
    void start();
    
    //更新処理
    void update();
    
    //フェイズ終了時に呼ばれる関数
    void end();
};

//================================================================================================
//バトルフェイズ
//================================================================================================
class CBattlePhase : public CPhase{
public:
    //フェイズ切り替え時に呼ばれる関数
    void start();
    
    //更新処理
    void update();
    
    //フェイズ終了時に呼ばれる関数
    void end();
};

//================================================================================================
//エンドフェイズ
//================================================================================================
class CEndPhase : public CPhase{
public:
    //フェイズ切り替え時に呼ばれる関数
    void start();
    
    //更新処理
    void update();
    
    //フェイズ終了時に呼ばれる関数
    void end();
};


//================================================================================================
//フェイズシングルトン
//================================================================================================
class CPhaseManager {
private:
    //コンストラクタ
    CPhaseManager();
    
    //インスタンス
    CPhaseManager *m_pManager = NULL;
    
    //現在のフェイズ
    CPhase *m_pPhase = NULL;
    
public:
    //インスタンス取得
    static CPhaseManager *getInstance();
    
    //削除
    static void removeInstance();
    
    //現在のフェイズの取得
    CPhase *getPhase();
};